/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package nz.ac.aut.pdc.ChessHits.GUI;

import javax.swing.JOptionPane;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.PlainDocument;
import nz.ac.aut.pdc.ChessHits.model.ChessHitsGame;
import nz.ac.aut.pdc.ChessHits.model.Color;
import nz.ac.aut.pdc.ChessHits.model.Player;
import nz.ac.aut.pdc.ChessHits.userDB.UserDatabase;

/**
 *
 * @author gl modified by yl
 */
public class StartFrame extends javax.swing.JFrame {

    ChessHitsGame game;
    private UserDatabase userDB;
    private MainFrame mainFrame;

    /**
     * Creates new form Frame
     */
    public StartFrame(ChessHitsGame game) {
        this.game = game;
        initComponents();
        javax.swing.ButtonGroup bg = new javax.swing.ButtonGroup();
        bg.add(blackJradioB);
        bg.add(whiteJradioB);
        whiteJradioB.setSelected(true);
        this.setLocationRelativeTo(null);
        //jdbc
        this.userDB = new UserDatabase();
        this.userDB.establishConnection();
        if (!this.userDB.doesUserTableExist()) {
            this.userDB.createTable();
        }
        this.game.setDataBase(userDB);
        //jdbc ends
        setUpTextFieldLength();
        JOptionPane.showMessageDialog(rootPane, "Welcome to ChessHits, please enter your user"
                + " names\nand passwords(game records new user automatically)");

    }

    public MainFrame getMainFrame() {
        return this.mainFrame;
    }

    /**
     * set jtextfields length
     */
    private void setUpTextFieldLength() {
        PLAYER1_TEXT_FIELD.setDocument(new PlainDocument() {
            @Override
            public void insertString(int offs, String str, AttributeSet a)
                    throws BadLocationException {
                if (getLength() + str.length() <= 14) {
                    super.insertString(offs, str, a);
                }
            }
        });
        PLAYER2_TEXT_FIELD.setDocument(new PlainDocument() {
            @Override
            public void insertString(int offs, String str, AttributeSet a)
                    throws BadLocationException {
                if (getLength() + str.length() <= 14) {
                    super.insertString(offs, str, a);
                }
            }
        });
        jPasswordField1.setDocument(new PlainDocument() {
            @Override
            public void insertString(int offs, String str, AttributeSet a)
                    throws BadLocationException {
                if (getLength() + str.length() <= 10) {
                    super.insertString(offs, str, a);
                }
            }
        });

        jPasswordField2.setDocument(new PlainDocument() {
            @Override
            public void insertString(int offs, String str, AttributeSet a)
                    throws BadLocationException {
                if (getLength() + str.length() <= 10) {
                    super.insertString(offs, str, a);
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        submit = new javax.swing.JButton();
        PLAYER1_TEXT_FIELD = new javax.swing.JTextField();
        blackJradioB = new javax.swing.JRadioButton();
        whiteJradioB = new javax.swing.JRadioButton();
        PLAYER2_TEXT_FIELD = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        jPasswordField2 = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        submit.setText("submit");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        blackJradioB.setText("black");
        blackJradioB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blackJradioBActionPerformed(evt);
            }
        });

        whiteJradioB.setText("white");

        PLAYER2_TEXT_FIELD.setName(""); // NOI18N
        PLAYER2_TEXT_FIELD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PLAYER2_TEXT_FIELDActionPerformed(evt);
            }
        });

        jLabel1.setText("Player One name:");

        jLabel2.setText("Player Two name:");

        jLabel3.setText("Player One color:");

        jLabel4.setText("1P Password:");

        jLabel5.setText("2P Password:");

        jPasswordField1.setText("jPasswordField1");

        jPasswordField2.setText("jPasswordField2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(PLAYER1_TEXT_FIELD, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(blackJradioB, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(whiteJradioB, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPasswordField2, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(PLAYER2_TEXT_FIELD, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 45, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addComponent(submit, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PLAYER1_TEXT_FIELD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PLAYER2_TEXT_FIELD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPasswordField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(blackJradioB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(whiteJradioB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(submit)
                .addGap(43, 43, 43))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void blackJradioBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blackJradioBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_blackJradioBActionPerformed

    private void PLAYER2_TEXT_FIELDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PLAYER2_TEXT_FIELDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PLAYER2_TEXT_FIELDActionPerformed

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
        Player playerOne = null;
        Player playerTwo = null;
        boolean isPlayerOneWhite = false;
        if (blackJradioB.isSelected()) {
            playerOne = new Player(PLAYER1_TEXT_FIELD.getText(), Color.BLACK);
            playerTwo = new Player(PLAYER2_TEXT_FIELD.getText(), Color.WHITE);
        } else {
            playerOne = new Player(PLAYER1_TEXT_FIELD.getText(), Color.WHITE);
            playerTwo = new Player(PLAYER2_TEXT_FIELD.getText(), Color.BLACK);
            isPlayerOneWhite = true;
        }
        this.setVisible(false);
        final MainFrame gameMainFrame = new MainFrame(playerOne, playerTwo, game, isPlayerOneWhite);
        this.mainFrame = gameMainFrame;
        boolean shouldRun = true;
        String player1Pass = new String(jPasswordField1.getPassword());
        String player2Pass = new String(jPasswordField2.getPassword());
        String errorMessage = "";
        if (!this.userDB.doesAccountExist(PLAYER1_TEXT_FIELD.getText()) && PLAYER1_TEXT_FIELD.getText().length() == 0) {
            errorMessage += "Player1's account name must not be empty.\n";
            shouldRun = false;
        } else if (!this.userDB.doesAccountExist(PLAYER1_TEXT_FIELD.getText())) {
            this.userDB.addNewUser(PLAYER1_TEXT_FIELD.getText(), player1Pass);
        } else {
            if (!this.userDB.matchPasswords(player1Pass, PLAYER1_TEXT_FIELD.getText())) {
                shouldRun = false;
                errorMessage += PLAYER1_TEXT_FIELD.getText() + " has been registered, password failed to login.\n";
            }
        }
        if (!this.userDB.doesAccountExist(PLAYER2_TEXT_FIELD.getText()) && PLAYER2_TEXT_FIELD.getText().length() == 0) {
            errorMessage += "Player2's account name must not be empty.";
            shouldRun = false;
        } else if (!this.userDB.doesAccountExist(PLAYER2_TEXT_FIELD.getText())) {
            this.userDB.addNewUser(PLAYER2_TEXT_FIELD.getText(), player2Pass);
        } else {
            if (!this.userDB.matchPasswords(player2Pass, PLAYER2_TEXT_FIELD.getText())) {
                shouldRun = false;
                if (errorMessage.length() > 0) {
                    errorMessage += "\n" + PLAYER2_TEXT_FIELD.getText() + " has been registered, password failed to login";
                } else {
                    errorMessage += PLAYER2_TEXT_FIELD.getText() + " has been registered, password failed to login";
                }
            }
        }
        if (shouldRun) {
            playerOne.setNumberOfWins(this.userDB.getWins(playerOne.getName()));
            playerTwo.setNumberOfWins(this.userDB.getWins(playerTwo.getName()));
            //JOptionPane
            JOptionPane.showMessageDialog(this, "Welcome to ChessHits\n"
                    + playerOne.getName() + " has won " + playerOne.getNumberOfWins() + " time(s)\n"
                    + playerTwo.getName() + " has won " + playerTwo.getNumberOfWins() + " time(s)");
            //JoptionPane
            System.out.println(PLAYER1_TEXT_FIELD.getText() + " has won " + userDB.getWins(PLAYER1_TEXT_FIELD.getText()) + " game(s)");
            System.out.println(PLAYER2_TEXT_FIELD.getText() + " has won " + userDB.getWins(PLAYER2_TEXT_FIELD.getText()) + " game(s)");
            this.dispose();
            {
                java.awt.EventQueue.invokeLater(new Runnable() {
                    public void run() {
                        gameMainFrame.setVisible(true);
                    }
                });
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, errorMessage + "\nPlease try again");
            this.setAlwaysOnTop(true);
            this.setVisible(true);
            errorMessage = "";
        }
    }//GEN-LAST:event_submitActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JTextField PLAYER1_TEXT_FIELD;
    private static javax.swing.JTextField PLAYER2_TEXT_FIELD;
    private javax.swing.JRadioButton blackJradioB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JPasswordField jPasswordField2;
    private javax.swing.JButton submit;
    private javax.swing.JRadioButton whiteJradioB;
    // End of variables declaration//GEN-END:variables
}
